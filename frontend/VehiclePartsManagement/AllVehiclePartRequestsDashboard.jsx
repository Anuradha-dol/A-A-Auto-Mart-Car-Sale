import React, { useState, useEffect } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import jsPDF from "jspdf";
import html2canvas from "html2canvas";
import "./VehicleRequestsDashboardNew.css";

export default function VehicleRequestsDashboardNew() {
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();

  const API = "http://localhost:3000/api/tik";

  const fetchRequests = async () => {
    try {
      const res = await axios.get(API);
      setRequests(res.data);
      setLoading(false);
    } catch (err) {
      console.error(err);
      alert("❌ Failed to fetch vehicle part requests");
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchRequests();
  }, []);

  const handleRespond = (requestId) => {
    navigate(`/UpdateVehicleRequestForm/${requestId}`);
  };

  const downloadPDF = () => {
    const element = document.getElementById("vpr-new-pdf");
    html2canvas(element, { scale: 2, useCORS: true })
      .then((canvas) => {
        const imgData = canvas.toDataURL("image/png");
        const pdf = new jsPDF("p", "mm", "a4");
        const pdfWidth = pdf.internal.pageSize.getWidth();
        const pdfHeight = (canvas.height * pdfWidth) / canvas.width;
        pdf.addImage(imgData, "PNG", 0, 0, pdfWidth, pdfHeight);
        pdf.save("vehicle_part_requests.pdf");
      })
      .catch((err) => {
        console.error(err);
        alert("Failed to generate PDF. Ensure images are accessible.");
      });
  };

  if (loading) return <p className="vpr-new-loading">Loading vehicle part requests...</p>;

  return (
    <div className="vpr-new-container">
      <div className="vpr-new-header">
        <h1>📋 Vehicle Part Requests Report</h1>
        <p>{new Date().toLocaleString()}</p>
        <button className="vpr-new-download-btn" onClick={downloadPDF}>
          📄 Download PDF
        </button>
      </div>

      {requests.length === 0 ? (
        <p className="vpr-new-no-requests">No vehicle part requests found.</p>
      ) : (
        <div id="vpr-new-pdf" className="vpr-new-table-card">
          <table className="vpr-new-table">
            <thead>
              <tr>
                {["User ID","Part Name","Part Number","Quantity","Needed By","Status","Created At","Updated At","Action"].map((th) => (
                  <th key={th}>{th}</th>
                ))}
              </tr>
            </thead>
            <tbody>
              {requests.map((req) => (
                <tr key={req._id}>
                  <td>{req.userID || "-"}</td>
                  <td>{req.partName}</td>
                  <td>{req.partNumber || "-"}</td>
                  <td>{req.quantity}</td>
                  <td>{new Date(req.neededByDate).toLocaleDateString()}</td>
                  <td>{req.status}</td>
                  <td>{new Date(req.createdAt).toLocaleString()}</td>
                  <td>{new Date(req.updatedAt).toLocaleString()}</td>
                  <td>
                    <button
                      className="vpr-new-respond-btn"
                      onClick={() => handleRespond(req._id)}
                    >
                      Respond
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
          <div className="vpr-new-footer">Generated by Vehicle Parts Management System</div>
        </div>
      )}
    </div>
  );
}
